@startuml
'https://plantuml.com/class-diagram


class User {
    -int Id
    -string Name
    -string Email
    -string PasswordHash
    -List<Project> Projects
}

class TodoList {
    -int Id
    -string Name
    -List<TodoItem> Items
    -List<User> SharedUsers
    +void AddItem()
    +void RemoveItem()
}

class TodoItem {
    -int Id
    -string Name
    -string Description
    -DateTime? DueDate
    -Priority Priority
    -bool IsDone
    -List<Label> labels
    +void AddLabel()
    +void RemoveLabel()
    +void ToggleCompletion()
}

class Project {
    -int Id
    -string Name
    -List<TodoList> TodoLists
    -User Admin
    -List<UserProjectRole> UserRoles
    +void AddTodoList(TodoList list)
    +void RemoveTodoList(TodoList list)
    +void ShareWithUser(User user)
    +void RemoveUser(User user)
}


enum Priority {
    VeryLow,
    Low,
    Medium,
    High,
    VeryHigh,
}

class Label {
    -int id
    -string Name
    -string Color
}


class Role {
    -int id
    -string Name
    -HashSet<PermissionType> permissions
}


class UserProjectRole {
    -int UserId
    -int ProjectId
    -Role Role
}

class Calendar {
    +List<TodoItem> GetItemsForDate(DateTime date)
    +List<TodoItem> GetItemsForDateRange(DateTime start, DateTime end)
    +FilterItems(ISpecification<TodoItem> spec)
}


User "1" -- "*" Project : participates in >
User "1" -- "*" Project : owns >
User "1" -- "*" UserProjectRole : Has <
TodoItem "*" -- "*" Label : Contains
TodoItem --  Calendar : manages
TodoItem "1" -- "*" Priority : 1 >
Role "*" -- "*" PermissionType : Has >
Role "1" -- "*" UserProjectRole : assigned to >
Project "1" -- "*" UserProjectRole : Has >


TodoList "1" -- "*" TodoItem : contains >
Project "1" -- "*" TodoList : Has >

interface ISpecification<T> {
    +IsSatisfiedBy(T item) : bool
    +And(ISpecification<T> other) : ISpecification<T>
    +Or(ISpecification<T> other) : ISpecification<T>
    +Not() : ISpecification<T>
}

class DateRangeSpecification {
    -DateTime StartDate
    -DateTime EndDate
    +IsSatisfiedBy(TodoItem item) : bool 
}

class PrioritySpecification {
    -Priority Priority
    +IsSatisfiedBy(TodoItem item) : bool 
}
class LabelSpecification {
    -int LabelId
    +IsSatisfiedBy(TodoItem item) : bool 
}
class CompletionStatusSpecification {
    -bool IsCompleted
    +IsSatisfiedBy(TodoItem item) : bool 
}

class UserSpecification {
    -int UserId
    +IsSatisfiedBy(TodoItem item) : bool 
}


ISpecification <|.. DateRangeSpecification: implements < 
ISpecification <|.. PrioritySpecification: implements <
ISpecification <|.. LabelSpecification: implements <
ISpecification <|.. CompletionStatusSpecification: implements <
ISpecification <|.. UserSpecification: implements <


class PermissionManager {
        {static} +bool CheckPermission(User user, PermissionType permission)
        {static} +void AddPermission(Role role, PermissionType permission)
        {static} +void RemovePermission(Role role, PermissionType permission)
}

class PermissionType {
None = 0,
        ViewTodos = 1 << 0,
        CreateTodos = 1 << 1,
        UpdateTodos = 1 << 2,
        DeleteTodos = 1 << 3,
        ManageProjects = 1 << 4,
        AssignProjectMembers = 1 << 5,
        ManageTodoLists = 1 << 6,
        ShareTodoLists = 1 << 7,
        ManageLabels = 1 << 8,
        ViewUsers = 1 << 9,
        ManageUsers = 1 << 10,
        ManageRoles = 1 << 11,
        ManageAdmin = 1 << 12,
        All = ~0
}

PermissionManager "1" --o "1" PermissionType : Has >


@enduml